/*
 * Java bean class
 * Created on 30 mars 2015 ( Date ISO 2015-03-30 - Time 14:41:59 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.dao;


import com.mongodb.MongoClient;
import de.flapdoodle.embed.mongo.MongodExecutable;
import de.flapdoodle.embed.mongo.MongodProcess;
import de.flapdoodle.embed.mongo.MongodStarter;
import de.flapdoodle.embed.mongo.config.IMongodConfig;
import de.flapdoodle.embed.mongo.config.MongodConfigBuilder;
import de.flapdoodle.embed.mongo.config.Net;
import de.flapdoodle.embed.mongo.distribution.Version;
import de.flapdoodle.embed.process.runtime.Network;
import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import org.demo.bean.Country;
import org.demo.dao.CountryDao;

/**
 * Test : DAO : Country
 *
 * @author Telosys Tools Generator
 *
 */
public class CountryDaoTest {

    String HOST = "localhost";
    Integer PORT = 12345;
    String DATABASE = "test";

    CountryDao countryDao = new CountryDao(HOST, PORT, DATABASE);

    /**
     * Mongo in memory
     */
    MongodExecutable mongodExecutable;

    /**
     * Initialize MongoDB with Java client
     */
    @Before
    public void setUp() throws Exception {

        MongodStarter starter = MongodStarter.getDefaultInstance();

        IMongodConfig mongodConfig = new MongodConfigBuilder()
            .version(Version.Main.DEVELOPMENT)
            .net(new Net(PORT, Network.localhostIsIPv6()))
            .build();

        this.mongodExecutable = starter.prepare(mongodConfig);
        this.mongodExecutable.start();
    }

    @After
    public void after() {
        if (this.mongodExecutable != null) {
            this.mongodExecutable.stop();
        }
    }

    @Test
    public void test() {
        // Given
        Country country = new Country();
        country.setLabel("label");
        country.setCode("code");

        // Save
        countryDao.save(country);

        // Find by id
        Country countrySaved = countryDao.findByCode(country.getCode());

        // Then
        Assert.assertEquals("label", countrySaved.getLabel());
        Assert.assertEquals("code", countrySaved.getCode());

        // Delete
        countryDao.remove(countrySaved);

        // Find by id
        Country countryDeleted = countryDao.findByCode(country.getCode());

        // Then
        Assert.assertNull(countryDeleted);
    }

}
