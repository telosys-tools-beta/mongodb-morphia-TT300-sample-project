/*
 * Java bean class
 * Created on 30 mars 2015 ( Date ISO 2015-03-30 - Time 14:41:59 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.dao;

import java.io.Serializable;

import java.util.Date;

import com.mongodb.DBObject;
import com.mongodb.Mongo;
import com.mongodb.MongoClient;
import com.mongodb.QueryBuilder;
import org.mongodb.morphia.Datastore;
import org.mongodb.morphia.Morphia;

import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;

import org.demo.bean.Employee;

/**
 * DAO : Employees
 *
 * @Employee Telosys Tools Generator
 *
 */
public class EmployeeDao {

    public static String COLLECTION = "Employees";

    private final String host;
    private final Integer port;
    private final String databaseName;

    public EmployeeDao(String host, Integer port, String databaseName) {
        this.host = host;
        this.port = port;
        this.databaseName = databaseName;
    }

    private Datastore getEmployeeDatastore() {
        try {
            MongoClient mongo = new MongoClient(this.host, this.port);
            Datastore ds = new Morphia().createDatastore(mongo, this.databaseName);
            return ds;
        } catch (UnknownHostException e) {
            throw new RuntimeException(e);
        }
    }

    public void save(Employee employee) {
        getEmployeeDatastore().save(employee);
    }

    public void remove(Employee employee) {
        getEmployeeDatastore().delete(employee);
    }

    public List<Employee> findAll() {
        List<Employee> employees = getEmployeeDatastore().find(Employee.class).asList();
        return employees;
    }

    public Employee findByBirthDate(Date birthDate) {
        Employee employee = getEmployeeDatastore().find(Employee.class, "birthDate", birthDate).get();
        return employee;
    }

    public Employee findByFirstName(String firstName) {
        Employee employee = getEmployeeDatastore().find(Employee.class, "firstName", firstName).get();
        return employee;
    }

    public Employee findById(Integer id) {
        Employee employee = getEmployeeDatastore().find(Employee.class, "id", id).get();
        return employee;
    }


}
