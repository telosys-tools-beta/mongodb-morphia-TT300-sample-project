#set( $hasNotEmbedded = false )
#foreach( $link in $entity.links )
    #if( ! $link.isEmbedded )
        #set( $hasNotEmbedded = true )
    #end
#end
/*
* Java bean class
* Created on $today.date ( Date ISO $today.date("yyyy-MM-dd") - Time $today.time )
* Generated by $generator.name ( version $generator.version )
*/

package ${target.javaPackageFromFolder(${SRC})};

import java.io.Serializable;

#foreach( $import in $java.imports($entity.attributes) )
import $import;
#end

import org.mongodb.morphia.annotations.Entity;
import org.mongodb.morphia.annotations.Id;

/**
* Entity bean
*
* @author Telosys Tools Generator
*
*/
@Entity("${fn.uncapitalize($entity.name)}s")
public class $entity.name implements Serializable
{
    private static final long serialVersionUID = 1L;

#foreach( $field in $entity.attributes )
#if( $field.isKeyElement() )
    @Id
#end
    private $field.formattedType(1) $field.formattedName(1)#if($field.hasInitialValue())= ${field.initialValue}#end;
#end
#foreach( $link in $entity.links )
#if( ! $link.isEmbedded )
#foreach( $targetKeyAttribute in $link.targetEntity.keyAttributes )
    private $targetKeyAttribute.type ${fn.uncapitalize($link.targetEntity.name)}${fn.capitalize($targetKeyAttribute.name)};
#end
#else
    private $link.fieldType $link.fieldName;
#end
#end

    /**
     * Default constructor
     */
    public ${entity.name}()
    {
        super();
    }
#foreach( $field in $entity.attributes )
    #if ( $field.setter )

    /**
     * Set the "$field.name" field value
     * @param $field.name
     */
    public void ${field.setter}( $field.type $field.name )
    {
        this.$field.name = $field.name;
    }
    #end
    #if ( $field.getter )

    /**
     * Get the "$field.name" field value
     * @return the field value
     */
    public $field.type ${field.getter}()
    {
        return this.$field.name;
    }
    #end
#end
#foreach( $link in $entity.links )
#if( ! $link.isEmbedded )
#foreach( $targetKeyAttribute in $link.targetEntity.keyAttributes )
#set( $linkKeyAttributeName = $fn.uncapitalize($link.targetEntity.name) + $fn.capitalize($targetKeyAttribute.name) )
#set( $linkKeyAttributeType = $fn.capitalize($targetKeyAttribute.type) )
#set( $linkKeyAttributeSetter = "set" + $fn.capitalize($link.targetEntity.name) + $fn.capitalize($targetKeyAttribute.name) )
#set( $linkKeyAttributeGetter = "get" + $fn.capitalize($link.targetEntity.name) + $fn.capitalize($targetKeyAttribute.name) )
    #if ( $link.setter )

    /**
    * Set the "$linkKeyAttributeName" link value
    * @param $linkKeyAttributeName
    */
    public void ${linkKeyAttributeSetter}( $linkKeyAttributeType $linkKeyAttributeName )
    {
        this.$linkKeyAttributeName = $linkKeyAttributeName;
    }
    #end
    #if ( $link.getter )

    /**
    * Get the "$linkKeyAttributeName" link value
    * @return the link value
    */
    public ${linkKeyAttributeType} ${linkKeyAttributeGetter}()
    {
        return this.$linkKeyAttributeName;
    }
    #end
#end
#else
    #if ( $link.setter )

    /**
    * Set the "$link.fieldName" link value
    * @param $link.fieldName
    */
    public void ${link.setter}( $link.fieldType $link.fieldName )
    {
        this.$link.fieldName = $link.fieldName;
    }
    #end
    #if ( $link.getter )

    /**
    * Get the "$link.fieldName" link value
    * @return the link value
    */
    public $link.fieldType ${link.getter}()
    {
        return this.$link.fieldName;
    }
    #end
#end
#end

$java.toStringMethod($entity, 4)

}
